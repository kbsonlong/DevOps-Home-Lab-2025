# Environment Variables Example File
# This file contains all environment variables used in the application
# Copy this file to .env and modify values as needed

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================

# Node.js environment (development, production, test)
# Source: backend/server.js:3
NODE_ENV=development

# Application port for backend API
# Source: backend/server.js:4
PORT=3001

# API base URL for frontend requests
# Source: frontend/src/scripts/game.js:15
API_BASE_URL=/api

# =============================================================================
# DATABASE CONFIGURATION (PostgreSQL)
# =============================================================================

# Database host (service name in Kubernetes, container name in Docker Compose)
# Source: backend/models/database.js:8, docker-compose.yml:45
DB_HOST=postgres

# Database port
# Source: backend/models/database.js:9, docker-compose.yml:46
DB_PORT=5432

# Database name
# Source: backend/models/database.js:10, docker-compose.yml:47
DB_NAME=humor_memory_game

# Database username
# Source: backend/models/database.js:11, docker-compose.yml:48
DB_USER=gameuser

# Database password (change this in production!)
# Source: backend/models/database.js:12, docker-compose.yml:49
DB_PASSWORD=your_database_password_here

# Database connection pool size
# Source: backend/models/database.js:13
DB_POOL_SIZE=10

# Database connection timeout (milliseconds)
# Source: backend/models/database.js:14
DB_TIMEOUT=5000

# =============================================================================
# REDIS CONFIGURATION
# =============================================================================

# Redis host (service name in Kubernetes, container name in Docker Compose)
# Source: backend/utils/redis.js:8, docker-compose.yml:65
REDIS_HOST=redis

# Redis port
# Source: backend/utils/redis.js:9, docker-compose.yml:66
REDIS_PORT=6379

# Redis password (change this in production!)
# Source: backend/utils/redis.js:10, docker-compose.yml:67
REDIS_PASSWORD=your_redis_password_here

# Redis database number
# Source: backend/utils/redis.js:11
REDIS_DB=0

# Redis connection timeout (milliseconds)
# Source: backend/utils/redis.js:12
REDIS_TIMEOUT=5000

# Redis retry delay (milliseconds)
# Source: backend/utils/redis.js:13
REDIS_RETRY_DELAY=1000

# =============================================================================
# FRONTEND CONFIGURATION
# =============================================================================

# Frontend port (nginx configuration)
# Source: frontend/nginx.conf:3, docker-compose.yml:25
FRONTEND_PORT=80

# Frontend API endpoint for health checks
# Source: frontend/src/scripts/game.js:20
HEALTH_CHECK_ENDPOINT=/api/health

# =============================================================================
# NGINX CONFIGURATION
# =============================================================================

# Nginx worker processes
# Source: nginx/nginx.conf:2
NGINX_WORKER_PROCESSES=auto

# Nginx worker connections
# Source: nginx/nginx.conf:3
NGINX_WORKER_CONNECTIONS=1024

# Nginx client max body size
# Source: nginx/conf.d/default.conf:15
NGINX_CLIENT_MAX_BODY_SIZE=10M

# =============================================================================
# MONITORING CONFIGURATION
# =============================================================================

# Prometheus metrics endpoint
# Source: backend/middleware/metrics.js:5
METRICS_ENDPOINT=/metrics

# Prometheus metrics collection interval (seconds)
# Source: backend/middleware/metrics.js:6
METRICS_INTERVAL=15

# Grafana admin username
# Source: k8s/monitoring.yaml:45
GRAFANA_ADMIN_USER=admin

# Grafana admin password (change this in production!)
# Source: k8s/monitoring.yaml:46
GRAFANA_ADMIN_PASSWORD=your_grafana_password_here

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# JWT secret for authentication (change this in production!)
# Source: backend/middleware/validation.js:8
JWT_SECRET=your-super-secret-jwt-key-change-this

# Session secret for cookies (change this in production!)
# Source: backend/middleware/validation.js:9
SESSION_SECRET=your-super-secret-session-key-change-this

# CORS allowed origins (comma-separated)
# Source: backend/server.js:15
CORS_ORIGINS=http://localhost:3000,http://kbsonlong.com:8080

# Rate limiting requests per minute
# Source: backend/middleware/validation.js:10
RATE_LIMIT_REQUESTS=100

# Rate limiting window (minutes)
# Source: backend/middleware/validation.js:11
RATE_LIMIT_WINDOW=1

# =============================================================================
# GAME CONFIGURATION
# =============================================================================

# Maximum game sessions per user
# Source: backend/utils/gameData.js:5
MAX_GAME_SESSIONS=5

# Game session timeout (minutes)
# Source: backend/utils/gameData.js:6
GAME_SESSION_TIMEOUT=30

# Leaderboard cache TTL (seconds)
# Source: backend/utils/gameData.js:7
LEADERBOARD_CACHE_TTL=300

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================

# Log level (error, warn, info, debug)
# Source: backend/server.js:5
LOG_LEVEL=info

# Log format (json, simple)
# Source: backend/server.js:6
LOG_FORMAT=json

# Log file path (optional)
# Source: backend/server.js:7
LOG_FILE_PATH=/var/log/humor-game.log

# =============================================================================
# DEVELOPMENT OVERRIDES
# =============================================================================

# Enable debug mode (development only)
# Source: backend/server.js:8
DEBUG=false

# Enable hot reload (development only)
# Source: backend/server.js:9
HOT_RELOAD=false

# Mock external services (development only)
# Source: backend/server.js:10
MOCK_EXTERNAL_SERVICES=false

# =============================================================================
# NOTES
# =============================================================================

# 1. NEVER commit .env files to version control
# 2. Use different values for development, staging, and production
# 3. Store sensitive values in Kubernetes Secrets, not environment variables
# 4. Use strong, unique passwords in production
# 5. Enable HTTPS/TLS in production environments
# 6. Monitor and rotate secrets regularly
# 7. Use resource limits and requests in Kubernetes deployments
# 8. Enable security contexts and network policies in production
