---
# Baidu Proxy Ingress - 转发到 www.baidu.com
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: registry-proxy-ingress
  namespace: default
  annotations:
    # 禁用 SSL 重定向
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
    # 使用 HTTP 协议与后端通信
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    # 正确处理转发头
    nginx.ingress.kubernetes.io/use-forwarded-headers: "true"
    nginx.ingress.kubernetes.io/forwarded-for-header: "X-Forwarded-For"
    nginx.ingress.kubernetes.io/forwarded-proto-header: "X-Forwarded-Proto"
    nginx.ingress.kubernetes.io/forwarded-host-header: "X-Forwarded-Host"
    # 上游配置 - 直接转发到百度
    nginx.ingress.kubernetes.io/upstream-vhost: "www.baidu.com"
    # 重写目标 URL
    nginx.ingress.kubernetes.io/rewrite-target: /
    # 自定义 nginx 配置片段
    nginx.ingress.kubernetes.io/server-snippet: |
      location / {
        proxy_pass https://www.baidu.com;
        proxy_set_header Host www.baidu.com;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_ssl_server_name on;
        proxy_ssl_verify off;
      }
spec:
  ingressClassName: nginx
  rules:
    - host: registry.kbsonlong.com  # 本地访问域名
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: registry-proxy-service  # 虚拟服务，实际不会使用
                port:
                  number: 80

---
# 虚拟服务配置（实际不会被使用，因为 nginx 配置会直接转发）
apiVersion: v1
kind: Service
metadata:
  name: registry-proxy-service
  namespace: default
spec:
  type: ExternalName
  externalName: www.baidu.com
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
